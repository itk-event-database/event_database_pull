<?php
/**
 * @file
 * Functions related to event database pull module
 */

/**
 *  Implements hook_theme().
 */
function event_database_pull_theme($existing, $type, $theme, $path) {
  return [
    'event_database_pull_event_list' => [
      'variables' => [
        'events' => [],
        'view' => [],
      ],
    ],
    'event_database_pull_event_details' => [
      'variables' => [
        'event' => [],
      ],
    ],
    'event_database_block' => [
      'variables' => [
        'events' => [],
        'view' => [],
      ],
    ],
  ];
}

/**
 * Add samedate variable to all occurences of an event.
 *
 * @param $event
 * @param $DateTimeZoneUTC
 */
function _event_database_pull_set_same_date ($event, $DateTimeZoneUTC) {
    foreach($event->getOccurrences() as $occurrence_key => $occurrence) {
    $startDate = DateTime::CreateFromFormat('Y-m-d\TH:i:s\+00:00', $occurrence->get('startDate'), $DateTimeZoneUTC);
    $endDate = DateTime::CreateFromFormat('Y-m-d\TH:i:s\+00:00', $occurrence->get('endDate'), $DateTimeZoneUTC);
    if ($startDate && $endDate) {
      $startdate = \Drupal::service('date.formatter')
        ->format($startDate->getTimestamp(), 'custom', 'dmY');
      $enddate = \Drupal::service('date.formatter')
        ->format($endDate->getTimestamp(), 'custom', 'dmY');
      $occurrence->samedate = ($startdate == $enddate);
    }
    else {
      $occurrence->samedate = FALSE;
    }
  }
}
